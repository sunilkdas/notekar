{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/notes/notes.component.ts","./src/app/components/notes/notes.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/guards/auth.guard.ts","./src/app/services/Validate.Service.ts","./src/app/services/auth.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport {AuthGuard} from '../app/guards/auth.guard';\nimport { NotesComponent } from './components/notes/notes.component';\n\nconst routes: Routes = [\n \n  {path : 'register',component: RegisterComponent},\n  {path : 'login',component: LoginComponent},\n  {path : 'profile',component: ProfileComponent, canActivate:[AuthGuard]},\n  {path : 'dashboard',component: DashboardComponent, canActivate:[AuthGuard]},\n  {path : 'notes',component: NotesComponent, canActivate:[AuthGuard]},\n  {path : '',redirectTo:'login', pathMatch:'prefix'}\n\n\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-package';\n}\n","<div>\n <app-navbar></app-navbar>\n</div>\n<br><br><br><br>\n<div class=\"container\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-sm-2 col-md-2\">\n      </div>\n      <div class=\"col-sm-8 col-md-8 col-xs-12\">\n       \n        <router-outlet> <flash-messages></flash-messages></router-outlet>\n      </div>\n      <div class=\"col-sm-2 col-md-2\">\n        \n      </div>\n    </div>\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {ValidateService} from './services/Validate.Service';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { NotesComponent } from './components/notes/notes.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    ProfileComponent,\n    LoginComponent,\n    HomeComponent,\n    DashboardComponent,\n    RegisterComponent,\n    NotesComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FlashMessagesModule.forRoot()\n  ],\n  providers: [ValidateService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <div class=\"jumbotron text-center\"><h1> Welcome to Notekar!</h1>\n        <p>Add notes, store it for lifetime. Power to you.</p></div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FlashMessagesService } from '../../../../node_modules/angular2-flash-messages';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <div class=\"jumbotron text-center\"><h1> Welcome to Notekar!</h1>\n        <p>Add notes, store it for lifetime. Power to you.</p></div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthService} from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loggedIn=false;\n  loginForm: any;\n  constructor(fb : FormBuilder, private as: AuthService, private router: Router, private _flashMessagesService: FlashMessagesService) { \n    this.loginForm=fb.group({\n      username:['', Validators.required],\n      password:['', Validators.required],\n\n    })\n  }\n  get f() { return this.loginForm.controls; }\n  ngOnInit(): void {\n  }\n  onSubmit() {\n  // TODO: Use EventEmitter with form value\n  console.warn(this.loginForm.value);\n  this.as.login(this.loginForm.value).subscribe((resp:any)=>{\n    console.log(resp);\n    if(resp!=undefined && resp.success){\n    this.loggedIn=true;\n    localStorage.setItem(\"user\",window.btoa(this.loginForm.value[\"username\"]))\n    this.as.storeUserData(resp);\n    this.router.navigate(['/dashboard']);\n    this._flashMessagesService.show('Login Success', { cssClass: 'alert-success', timeout: 3000 });\n    }\n    else{\n      this._flashMessagesService.show('Login Error', { cssClass: 'alert-danger', timeout: 3000 });\n    }\n  });\n}\n\n\n\n}\n","<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n    <h3>Login</h3>\n    <div class=\"form-group\">\n    <label for=\"username\">\n      Username:\n    \n    </label>\n    <input id=\"username\" type=\"text\" formControlName=\"username\" class=\"form-control\">\n    <div *ngIf=\"f.username.invalid && (f.username.dirty || f.username.touched)\"\n        class=\"alert alert-danger\">\n        <div *ngIf=\"f.username.errors.required\">\n            Username is required.\n          </div>  </div>\n</div> <div class=\"form-group\">\n    <label for=\"password\">\n      Password:\n   \n    </label>   <input id=\"password\" type=\"password\" formControlName=\"password\" class=\"form-control\">\n    <div *ngIf=\"f.password.invalid && (f.password.dirty || f.password.touched)\"\n    class=\"alert alert-danger\">\n        <div *ngIf=\"f.password.errors.required\">\n            Password is required.\n          </div></div>\n</div> <div class=\"form-group\">\n    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!loginForm.valid\">Submit</button>\n</div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  isLoggedin= false;\n  constructor(private as: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  onLogoutClick(){\n    this.as.logout();\n    this.router.navigate(['/login']);\n  }\n  checkLoginStatus(){\n   return this.as.isLoggedIn();\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n    <a class=\"navbar-brand\" href=\"#\">Notekar</a>\n    <button type=\"button\" class=\"navbar-toggler\"  data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" *ngIf=\"checkLoginStatus()\"  routerLink=\"/dashboard\">Dashboard</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/profile\" *ngIf=\"checkLoginStatus()\" >Profile</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/notes\" *ngIf=\"checkLoginStatus()\" >Notes</a>\n        </li>\n      </ul>\n      <ul class=\"navbar-nav navbar-right\">\n         <li class=\"nav-item\">\n        <a class=\"nav-link\" *ngIf=\"!checkLoginStatus()\" routerLink=\"/login\">Login</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" *ngIf=\"!checkLoginStatus()\"  routerLink=\"/register\">Register</a>\n      </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" *ngIf=\"checkLoginStatus()\" (click)=\"onLogoutClick()\">Logout</a>\n        </li>\n      </ul>\n    </div>\n  </nav>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-notes',\n  templateUrl: './notes.component.html',\n  styleUrls: ['./notes.component.css']\n})\nexport class NotesComponent implements OnInit {\n\n  notes=[];\n  noteForm: any;\n  constructor(fb : FormBuilder, private as: AuthService, private router: Router, private _flashMessagesService: FlashMessagesService) { \n    this.noteForm=fb.group({\n      notes:['', Validators.required],\n\n    });\n    const username= window.atob(localStorage.getItem(\"user\"));\n    console.log(this.notes)\n    this.as.getNotes({'username': username}).subscribe((resp:any)=>{  \n      if(resp){\n          this.notes=resp['notes'];;\n          console.log(this.notes)\n      }\n  });\n  }\n  get f() { return this.noteForm.controls; }\n  ngOnInit(): void {\n  }\n  onSubmit() {\n  // TODO: Use EventEmitter with form value\n  console.warn(this.noteForm.value);\n  const username= window.atob(localStorage.getItem(\"user\"));\n  const notes=this.noteForm.value.notes;\n  this.as.postNotes({'username': username,'notes':notes}).subscribe((resp:any)=>{\n    console.log(resp);\n    if(resp!=undefined && resp.success){  \n      this._flashMessagesService.show('Success', { cssClass: 'alert-success', timeout: 3000 });\n      this.as.getNotes({'username': username}).subscribe((resp:any)=>{  \n          if(resp){\n              this.notes=resp['notes'];\n          }\n      });\n    \n    }\n    else{\n      this._flashMessagesService.show('Error', { cssClass: 'alert-danger', timeout: 3000 });\n    }\n  });\n}\n\n\n\n}\n","\n<form [formGroup]=\"noteForm\" (ngSubmit)=\"onSubmit()\">\n    <h3>Add new note</h3>\n    <div class=\"form-group\">\n    <textarea placeholder=\"Write your note here...\" formControlName=\"notes\" class=\"form-control\"></textarea>\n    <div *ngIf=\"f.notes.invalid && (f.notes.dirty || f.notes.touched)\"\n        class=\"alert alert-danger\">\n        <div *ngIf=\"f.notes.errors.required\">\n            Some text is required to save.\n          </div>  </div>\n</div> \n<div class=\"form-group\">\n    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!noteForm.valid\">Save</button>\n</div>\n</form>\n<br>\n<div *ngIf=\"notes.length>0\">\n    <div class=\"row\">\n        \n        <div class=\"col-sm-6\" *ngFor=\"let i of notes\"> \n    <div class=\"card\" style=\"width: 18rem;\" >\n      \n        <div class=\"card-body\">\n          <h5 class=\"card-title\">#notes</h5>\n          <p class=\"card-text\">{{i.notes}}</p>\n          \n        </div> </div>\n        <br>  \n      </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: any;\n  constructor(private as :AuthService) { this.getprofile();}\n\n  ngOnInit(): void {\n   \n  }\n  getprofile(){\n    this.as.getProfile().subscribe((data:any )=>{\n      this.user=data.user;\n    }\n    );\n  }\n\n}\n","<div *ngIf=\"user\">\n<table class=\"table\">\n    <tr>\n        <th>Name: </th>\n        <th>{{user.name}}</th>\n    </tr>\n    \n    <tr>\n        <th>Username: </th>\n        <th>{{user.username}}</th>\n    </tr>\n    <tr>\n        <th>Email: </th>\n        <th>{{user.email}}</th>\n    </tr>\n</table>\n\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthService} from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  submitted: boolean;\n  registerForm: any;\n\n  constructor(fb : FormBuilder, private as: AuthService, private router: Router,private _flashMessagesService: FlashMessagesService) { \n    this.registerForm=fb.group({\n      name:['', Validators.required],\n      username:['', Validators.required],\n      email:['', Validators.required],\n      password:['', Validators.required],\n\n    })\n  }\n  get f() { return this.registerForm.controls; }\n\n  ngOnInit(): void {\n  }\n  onSubmit() {\n    this.submitted = true;\n  // TODO: Use EventEmitter with form value\n  console.warn(this.registerForm.value);\n    this.as.register(this.registerForm.value).subscribe((resp:any )=>{\n      if(resp!=undefined && resp.success){\n      this.router.navigate(['/login']);\n      this._flashMessagesService.show('Registration Success', { cssClass: 'alert-success', timeout: 3000 });\n      }\n      else{\n        this._flashMessagesService.show('Registration Error', { cssClass: 'alert-danger', timeout: 3000 });\n      }\n    });\n    \n}\n\n}\n","<form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n        <h3>Register</h3>\n        <div class=\"form-group\">\n        <label for=\"name\">\n          Name:\n       \n        </label>\n        <input id=\"name\" type=\"text\" formControlName=\"name\" class=\"form-control\">\n        <div *ngIf=\"f.name.invalid && (f.name.dirty || f.name.touched)\"\n    class=\"alert alert-danger\">\n        <div *ngIf=\"f.name.errors.required\">\n            Name is required.\n          </div></div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"email\">\n          Email:\n         \n        </label>\n        <input id=\"email\" type=\"email\" formControlName=\"email\" class=\"form-control\">\n        <div *ngIf=\"f.email.invalid && (f.email.dirty || f.email.touched)\"\n    class=\"alert alert-danger\">\n        <div *ngIf=\"f.email.errors.required\">\n            Email is required.\n          </div> </div>\n        </div> <div class=\"form-group\">\n        <label for=\"username\">\n          Username:\n        \n        </label>\n        <input id=\"username\" type=\"text\" formControlName=\"username\" class=\"form-control\">\n        <div *ngIf=\"f.username.invalid && (f.username.dirty || f.username.touched)\"\n        class=\"alert alert-danger\">\n        <div *ngIf=\"f.username.errors.required\">\n            Username is required.\n          </div>  </div>\n    </div> <div class=\"form-group\">\n        <label for=\"password\">\n          Password:\n       \n        </label>   <input id=\"password\" type=\"password\" formControlName=\"password\" class=\"form-control\">\n        <div *ngIf=\"f.password.invalid && (f.password.dirty || f.password.touched)\"\n        class=\"alert alert-danger\">\n        <div *ngIf=\"f.password.errors.required\">\n            Password is required.\n          </div></div>\n    </div> <div class=\"form-group\">\n        <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!registerForm.valid\">Submit</button>\n    </div>\n</form>","import { Injectable } from '@angular/core';\r\nimport {Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\r\nimport {AuthService} from '../services/auth.service';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class AuthGuard implements CanActivate{\r\n    constructor(private as: AuthService, private route : Router){\r\n    }\r\n    canActivate() {\r\n       if(this.as.isLoggedIn()){\r\n           return true;\r\n       }\r\n       else{\r\n           this.route.navigate(['/login'])\r\n       }\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n  validateRegister(user){\n    if(user.name== undefined||user.email== undefined || user.username== undefined || user.password== undefined){\n\n      return false;\n    }\n    else{\n      return true;\n    }\n  }\n   validateEmail(email){\n    return (/^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/.test(email));\n\n    \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n  REGURL = \"http://localhost:3333/users/register\";\n  LOGINURL = \"http://localhost:3333/users/authenticate\";\n  PROFILEURL = \"http://localhost:3333/users/profile\";\n  PNOTEURL = \"http://localhost:3333/notes/addNote\";\n  GNOTEURL = \"http://localhost:3333/notes/getnotes\";\n  constructor(private http: HttpClient) { }\n\n  postNotes(user: any){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type',\"application/json\")\n    return this.http.post(this.PNOTEURL, user,{headers: headers});\n  }\n  getNotes(username: any){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type',\"application/json\")\n    return this.http.post(this.GNOTEURL, username,{headers: headers});\n  }\n  register(user: any){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type',\"application/json\")\n    return this.http.post(this.REGURL, user,{headers: headers});\n  }\n  login(user: any){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type',\"application/json\")\n    return this.http.post(this.LOGINURL, user,{headers: headers});\n  }\n  getProfile(){\n    let token=localStorage.getItem(\"id_token\");\n    console.log(token)\n    const httpOptions = {\n      headers : new HttpHeaders({\n      'Authorization': token\n    })};\n    return this.http.get(this.PROFILEURL,httpOptions);\n  }\n  storeUserData(data){\n    localStorage.setItem('id_token',data.token);\n    this.authToken=data.token;\n    this.user= data.users;\n  }\n  logout(){\n    this.authToken= null;\n    this.user=null;\n    localStorage.clear();\n  }\n  isLoggedIn(){\n\n if (localStorage.getItem(\"id_token\") == null ) {\n      return false;\n  }\n  else {\n      return true;\n  }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}