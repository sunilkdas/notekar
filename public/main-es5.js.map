{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/notes/notes.component.ts","webpack:///src/app/components/notes/notes.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/services/Validate.Service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","DashboardComponent","HomeComponent","LoginComponent","fb","as","router","_flashMessagesService","loggedIn","loginForm","group","username","required","password","console","warn","value","login","subscribe","resp","log","undefined","success","localStorage","setItem","window","btoa","storeUserData","navigate","show","cssClass","timeout","controls","onSubmit","NavbarComponent","isLoggedin","logout","isLoggedIn","NotesComponent","notes","noteForm","atob","getItem","getNotes","postNotes","ProfileComponent","getprofile","getProfile","data","user","RegisterComponent","registerForm","name","email","submitted","register","AuthGuard","route","providedIn","ValidateService","test","AuthService","http","REGURL","LOGINURL","PROFILEURL","PNOTEURL","GNOTEURL","headers","append","post","token","httpOptions","get","authToken","users","clear","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport {AuthGuard} from '../app/guards/auth.guard';\nimport { NotesComponent } from './components/notes/notes.component';\n\nconst routes: Routes = [\n \n  {path : 'register',component: RegisterComponent},\n  {path : 'login',component: LoginComponent},\n  {path : 'profile',component: ProfileComponent, canActivate:[AuthGuard]},\n  {path : 'dashboard',component: DashboardComponent, canActivate:[AuthGuard]},\n  {path : 'notes',component: NotesComponent, canActivate:[AuthGuard]},\n  {path : '',redirectTo:'login', pathMatch:'prefix'}\n\n\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-package';\n}\n","<div>\n <app-navbar></app-navbar>\n</div>\n<br><br><br><br>\n<div class=\"container\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-sm-2 col-md-2\">\n      </div>\n      <div class=\"col-sm-8 col-md-8 col-xs-12\">\n       \n        <router-outlet> <flash-messages></flash-messages></router-outlet>\n      </div>\n      <div class=\"col-sm-2 col-md-2\">\n        \n      </div>\n    </div>\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {ValidateService} from './services/Validate.Service';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { NotesComponent } from './components/notes/notes.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    ProfileComponent,\n    LoginComponent,\n    HomeComponent,\n    DashboardComponent,\n    RegisterComponent,\n    NotesComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FlashMessagesModule.forRoot()\n  ],\n  providers: [ValidateService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <div class=\"jumbotron text-center\"><h1> Welcome to Notekar!</h1>\n        <p>Add notes, store it for lifetime. Power to you.</p></div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FlashMessagesService } from '../../../../node_modules/angular2-flash-messages';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <div class=\"jumbotron text-center\"><h1> Welcome to Notekar!</h1>\n        <p>Add notes, store it for lifetime. Power to you.</p></div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthService} from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loggedIn=false;\n  loginForm: any;\n  constructor(fb : FormBuilder, private as: AuthService, private router: Router, private _flashMessagesService: FlashMessagesService) { \n    this.loginForm=fb.group({\n      username:['', Validators.required],\n      password:['', Validators.required],\n\n    })\n  }\n  get f() { return this.loginForm.controls; }\n  ngOnInit(): void {\n  }\n  onSubmit() {\n  // TODO: Use EventEmitter with form value\n  console.warn(this.loginForm.value);\n  this.as.login(this.loginForm.value).subscribe((resp:any)=>{\n    console.log(resp);\n    if(resp!=undefined && resp.success){\n    this.loggedIn=true;\n    localStorage.setItem(\"user\",window.btoa(this.loginForm.value[\"username\"]))\n    this.as.storeUserData(resp);\n    this.router.navigate(['/dashboard']);\n    this._flashMessagesService.show('Login Success', { cssClass: 'alert-success', timeout: 3000 });\n    }\n    else{\n      this._flashMessagesService.show('Login Error', { cssClass: 'alert-danger', timeout: 3000 });\n    }\n  });\n}\n\n\n\n}\n","<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n    <h3>Login</h3>\n    <div class=\"form-group\">\n    <label for=\"username\">\n      Username:\n    \n    </label>\n    <input id=\"username\" type=\"text\" formControlName=\"username\" class=\"form-control\">\n    <div *ngIf=\"f.username.invalid && (f.username.dirty || f.username.touched)\"\n        class=\"alert alert-danger\">\n        <div *ngIf=\"f.username.errors.required\">\n            Username is required.\n          </div>  </div>\n</div> <div class=\"form-group\">\n    <label for=\"password\">\n      Password:\n   \n    </label>   <input id=\"password\" type=\"password\" formControlName=\"password\" class=\"form-control\">\n    <div *ngIf=\"f.password.invalid && (f.password.dirty || f.password.touched)\"\n    class=\"alert alert-danger\">\n        <div *ngIf=\"f.password.errors.required\">\n            Password is required.\n          </div></div>\n</div> <div class=\"form-group\">\n    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!loginForm.valid\">Submit</button>\n</div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  isLoggedin= false;\n  constructor(private as: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  onLogoutClick(){\n    this.as.logout();\n    this.router.navigate(['/login']);\n  }\n  checkLoginStatus(){\n   return this.as.isLoggedIn();\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n    <a class=\"navbar-brand\" href=\"#\">Notekar</a>\n    <button type=\"button\" class=\"navbar-toggler\"  data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" *ngIf=\"checkLoginStatus()\"  routerLink=\"/dashboard\">Dashboard</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/profile\" *ngIf=\"checkLoginStatus()\" >Profile</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/notes\" *ngIf=\"checkLoginStatus()\" >Notes</a>\n        </li>\n      </ul>\n      <ul class=\"navbar-nav navbar-right\">\n         <li class=\"nav-item\">\n        <a class=\"nav-link\" *ngIf=\"!checkLoginStatus()\" routerLink=\"/login\">Login</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" *ngIf=\"!checkLoginStatus()\"  routerLink=\"/register\">Register</a>\n      </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" *ngIf=\"checkLoginStatus()\" (click)=\"onLogoutClick()\">Logout</a>\n        </li>\n      </ul>\n    </div>\n  </nav>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-notes',\n  templateUrl: './notes.component.html',\n  styleUrls: ['./notes.component.css']\n})\nexport class NotesComponent implements OnInit {\n\n  notes=[];\n  noteForm: any;\n  constructor(fb : FormBuilder, private as: AuthService, private router: Router, private _flashMessagesService: FlashMessagesService) { \n    this.noteForm=fb.group({\n      notes:['', Validators.required],\n\n    });\n    const username= window.atob(localStorage.getItem(\"user\"));\n    console.log(this.notes)\n    this.as.getNotes({'username': username}).subscribe((resp:any)=>{  \n      if(resp){\n          this.notes=resp['notes'];;\n          console.log(this.notes)\n      }\n  });\n  }\n  get f() { return this.noteForm.controls; }\n  ngOnInit(): void {\n  }\n  onSubmit() {\n  // TODO: Use EventEmitter with form value\n  console.warn(this.noteForm.value);\n  const username= window.atob(localStorage.getItem(\"user\"));\n  const notes=this.noteForm.value.notes;\n  this.as.postNotes({'username': username,'notes':notes}).subscribe((resp:any)=>{\n    console.log(resp);\n    if(resp!=undefined && resp.success){  \n      this._flashMessagesService.show('Success', { cssClass: 'alert-success', timeout: 3000 });\n      this.as.getNotes({'username': username}).subscribe((resp:any)=>{  \n          if(resp){\n              this.notes=resp['notes'];\n          }\n      });\n    \n    }\n    else{\n      this._flashMessagesService.show('Error', { cssClass: 'alert-danger', timeout: 3000 });\n    }\n  });\n}\n\n\n\n}\n","\n<form [formGroup]=\"noteForm\" (ngSubmit)=\"onSubmit()\">\n    <h3>Add new note</h3>\n    <div class=\"form-group\">\n    <textarea placeholder=\"Write your note here...\" formControlName=\"notes\" class=\"form-control\"></textarea>\n    <div *ngIf=\"f.notes.invalid && (f.notes.dirty || f.notes.touched)\"\n        class=\"alert alert-danger\">\n        <div *ngIf=\"f.notes.errors.required\">\n            Some text is required to save.\n          </div>  </div>\n</div> \n<div class=\"form-group\">\n    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!noteForm.valid\">Save</button>\n</div>\n</form>\n<br>\n<div *ngIf=\"notes.length>0\">\n    <div class=\"row\">\n        \n        <div class=\"col-sm-6\" *ngFor=\"let i of notes\"> \n    <div class=\"card\" style=\"width: 18rem;\" >\n      \n        <div class=\"card-body\">\n          <h5 class=\"card-title\">#notes</h5>\n          <p class=\"card-text\">{{i.notes}}</p>\n          \n        </div> </div>\n        <br>  \n      </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: any;\n  constructor(private as :AuthService) { this.getprofile();}\n\n  ngOnInit(): void {\n   \n  }\n  getprofile(){\n    this.as.getProfile().subscribe((data:any )=>{\n      this.user=data.user;\n    }\n    );\n  }\n\n}\n","<div *ngIf=\"user\">\n<table class=\"table\">\n    <tr>\n        <th>Name: </th>\n        <th>{{user.name}}</th>\n    </tr>\n    \n    <tr>\n        <th>Username: </th>\n        <th>{{user.username}}</th>\n    </tr>\n    <tr>\n        <th>Email: </th>\n        <th>{{user.email}}</th>\n    </tr>\n</table>\n\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthService} from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  submitted: boolean;\n  registerForm: any;\n\n  constructor(fb : FormBuilder, private as: AuthService, private router: Router,private _flashMessagesService: FlashMessagesService) { \n    this.registerForm=fb.group({\n      name:['', Validators.required],\n      username:['', Validators.required],\n      email:['', Validators.required],\n      password:['', Validators.required],\n\n    })\n  }\n  get f() { return this.registerForm.controls; }\n\n  ngOnInit(): void {\n  }\n  onSubmit() {\n    this.submitted = true;\n  // TODO: Use EventEmitter with form value\n  console.warn(this.registerForm.value);\n    this.as.register(this.registerForm.value).subscribe((resp:any )=>{\n      if(resp!=undefined && resp.success){\n      this.router.navigate(['/login']);\n      this._flashMessagesService.show('Registration Success', { cssClass: 'alert-success', timeout: 3000 });\n      }\n      else{\n        this._flashMessagesService.show('Registration Error', { cssClass: 'alert-danger', timeout: 3000 });\n      }\n    });\n    \n}\n\n}\n","<form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n        <h3>Register</h3>\n        <div class=\"form-group\">\n        <label for=\"name\">\n          Name:\n       \n        </label>\n        <input id=\"name\" type=\"text\" formControlName=\"name\" class=\"form-control\">\n        <div *ngIf=\"f.name.invalid && (f.name.dirty || f.name.touched)\"\n    class=\"alert alert-danger\">\n        <div *ngIf=\"f.name.errors.required\">\n            Name is required.\n          </div></div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"email\">\n          Email:\n         \n        </label>\n        <input id=\"email\" type=\"email\" formControlName=\"email\" class=\"form-control\">\n        <div *ngIf=\"f.email.invalid && (f.email.dirty || f.email.touched)\"\n    class=\"alert alert-danger\">\n        <div *ngIf=\"f.email.errors.required\">\n            Email is required.\n          </div> </div>\n        </div> <div class=\"form-group\">\n        <label for=\"username\">\n          Username:\n        \n        </label>\n        <input id=\"username\" type=\"text\" formControlName=\"username\" class=\"form-control\">\n        <div *ngIf=\"f.username.invalid && (f.username.dirty || f.username.touched)\"\n        class=\"alert alert-danger\">\n        <div *ngIf=\"f.username.errors.required\">\n            Username is required.\n          </div>  </div>\n    </div> <div class=\"form-group\">\n        <label for=\"password\">\n          Password:\n       \n        </label>   <input id=\"password\" type=\"password\" formControlName=\"password\" class=\"form-control\">\n        <div *ngIf=\"f.password.invalid && (f.password.dirty || f.password.touched)\"\n        class=\"alert alert-danger\">\n        <div *ngIf=\"f.password.errors.required\">\n            Password is required.\n          </div></div>\n    </div> <div class=\"form-group\">\n        <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!registerForm.valid\">Submit</button>\n    </div>\n</form>","import { Injectable } from '@angular/core';\r\nimport {Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\r\nimport {AuthService} from '../services/auth.service';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class AuthGuard implements CanActivate{\r\n    constructor(private as: AuthService, private route : Router){\r\n    }\r\n    canActivate() {\r\n       if(this.as.isLoggedIn()){\r\n           return true;\r\n       }\r\n       else{\r\n           this.route.navigate(['/login'])\r\n       }\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n  validateRegister(user){\n    if(user.name== undefined||user.email== undefined || user.username== undefined || user.password== undefined){\n\n      return false;\n    }\n    else{\n      return true;\n    }\n  }\n   validateEmail(email){\n    return (/^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/.test(email));\n\n    \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n  REGURL = \"http://localhost:3333/users/register\";\n  LOGINURL = \"http://localhost:3333/users/authenticate\";\n  PROFILEURL = \"http://localhost:3333/users/profile\";\n  PNOTEURL = \"http://localhost:3333/notes/addNote\";\n  GNOTEURL = \"http://localhost:3333/notes/getnotes\";\n  constructor(private http: HttpClient) { }\n\n  postNotes(user: any){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type',\"application/json\")\n    return this.http.post(this.PNOTEURL, user,{headers: headers});\n  }\n  getNotes(username: any){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type',\"application/json\")\n    return this.http.post(this.GNOTEURL, username,{headers: headers});\n  }\n  register(user: any){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type',\"application/json\")\n    return this.http.post(this.REGURL, user,{headers: headers});\n  }\n  login(user: any){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type',\"application/json\")\n    return this.http.post(this.LOGINURL, user,{headers: headers});\n  }\n  getProfile(){\n    let token=localStorage.getItem(\"id_token\");\n    console.log(token)\n    const httpOptions = {\n      headers : new HttpHeaders({\n      'Authorization': token\n    })};\n    return this.http.get(this.PROFILEURL,httpOptions);\n  }\n  storeUserData(data){\n    localStorage.setItem('id_token',data.token);\n    this.authToken=data.token;\n    this.user= data.users;\n  }\n  logout(){\n    this.authToken= null;\n    this.user=null;\n    localStorage.clear();\n  }\n  isLoggedIn(){\n\n if (localStorage.getItem(\"id_token\") == null ) {\n      return false;\n  }\n  else {\n      return true;\n  }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}